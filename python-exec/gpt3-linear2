#!/usr/bin/env python3

import torch
from model.model import *
import argparse

parser = argparse.ArgumentParser() 

parser.add_argument('--vocab_size', type=int, default=50257)
parser.add_argument('--batch_size', type=int, default=32)
parser.add_argument('--n_embd', type=int, default=7168)
parser.add_argument('--n_head', type=int, default=56)
parser.add_argument('--seq_len', type=int, default=512)


args = parser.parse_args()

vocab_size=args.vocab_size
batch_size=args.batch_size
n_embd=args.n_embd
n_head= args.n_head
seq_len=args.seq_len

input_ids_1 = torch.rand(batch_size * seq_len, 4 * n_embd).cuda()
input_ids_2 = torch.rand(batch_size, seq_len, n_embd).cuda() # residual
model = FFN2(n_embd, batch_size, seq_len).cuda().eval()
with torch.no_grad():
    output_1 = model(input_ids_1, input_ids_2)